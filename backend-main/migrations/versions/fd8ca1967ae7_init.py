"""init

Revision ID: fd8ca1967ae7
Revises: 
Create Date: 2024-03-01 14:55:39.800894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fd8ca1967ae7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(length=1024), nullable=True),
    sa.Column('registered_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('City',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['Country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Part',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('translated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['Country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('underage', sa.Boolean(), nullable=True),
    sa.Column('part_id', sa.Integer(), nullable=True),
    sa.Column('moderator', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['Part.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('mother_name', sa.String(), nullable=True),
    sa.Column('live_country', sa.String(), nullable=True),
    sa.Column('live_city', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('passport_number', sa.String(), nullable=True),
    sa.Column('passport_photo', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('study_country_id', sa.Integer(), nullable=True),
    sa.Column('study_city_id', sa.Integer(), nullable=True),
    sa.Column('parent_phone_number', sa.String(), nullable=False),
    sa.Column('photo_path', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['status'], ['Status.id'], ),
    sa.ForeignKeyConstraint(['study_city_id'], ['City.id'], ),
    sa.ForeignKeyConstraint(['study_country_id'], ['Country.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('University',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['City.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('DocumentStudent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['Document.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['Student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Faculty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['University.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('StudentApplication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('application_name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['Student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('StudentNotification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['Student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AdminNotification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('checked', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('document_student_id', sa.Integer(), nullable=True),
    sa.Column('student_application_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_student_id'], ['DocumentStudent.id'], ),
    sa.ForeignKeyConstraint(['student_application_id'], ['StudentApplication.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['Student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('AdminNotification')
    op.drop_table('StudentNotification')
    op.drop_table('StudentApplication')
    op.drop_table('Faculty')
    op.drop_table('DocumentStudent')
    op.drop_table('University')
    op.drop_table('Student')
    op.drop_table('Document')
    op.drop_table('Part')
    op.drop_table('City')
    op.drop_table('Admin')
    op.drop_table('User')
    op.drop_table('Status')
    op.drop_table('Country')
    # ### end Alembic commands ###
